import{V as l,x as h,bf as x,bg as f,r as d,m as $}from"./index-BFMmcQtt.js";const b=["xxl","xl","lg","md","sm","xs"],m=r=>({xs:`(max-width: ${r.screenXSMax}px)`,sm:`(min-width: ${r.screenSM}px)`,md:`(min-width: ${r.screenMD}px)`,lg:`(min-width: ${r.screenLG}px)`,xl:`(min-width: ${r.screenXL}px)`,xxl:`(min-width: ${r.screenXXL}px)`}),M=r=>{const e=r,t=[].concat(b).reverse();return t.forEach((a,i)=>{const n=a.toUpperCase(),s=`screen${n}Min`,c=`screen${n}`;if(!(e[s]<=e[c]))throw new Error(`${s}<=${c} fails : !(${e[s]}<=${e[c]})`);if(i<t.length-1){const o=`screen${n}Max`;if(!(e[c]<=e[o]))throw new Error(`${c}<=${o} fails : !(${e[c]}<=${e[o]})`);const p=`screen${t[i+1].toUpperCase()}Min`;if(!(e[o]<=e[p]))throw new Error(`${o}<=${p} fails : !(${e[o]}<=${e[p]})`)}}),r},v=()=>{const[,r]=l(),e=m(M(r));return h.useMemo(()=>{const t=new Map;let a=-1,i={};return{responsiveMap:e,matchHandlers:{},dispatch(n){return i=n,t.forEach(s=>s(i)),t.size>=1},subscribe(n){return t.size||this.register(),a+=1,t.set(a,n),n(i),a},unsubscribe(n){t.delete(n),t.size||this.unregister()},register(){Object.entries(e).forEach(([n,s])=>{const c=({matches:u})=>{this.dispatch(Object.assign(Object.assign({},i),{[n]:u}))},o=window.matchMedia(s);f(o,c),this.matchHandlers[s]={mql:o,listener:c},c(o)})},unregister(){Object.values(e).forEach(n=>{const s=this.matchHandlers[n];x(s?.mql,s?.listener)}),t.clear()}}},[r])};function w(){const[,r]=d.useReducer(e=>e+1,0);return r}function E(r=!0,e={}){const t=d.useRef(e),a=w(),i=v();return $(()=>{const n=i.subscribe(s=>{t.current=s,r&&a()});return()=>i.unsubscribe(n)},[]),t.current}export{b as r,E as u};
